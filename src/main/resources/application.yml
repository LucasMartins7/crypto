server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: crypto-trading-api
  
  profiles:
    active: dev
  
  datasource:
    url: jdbc:h2:mem:cryptodb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  security:
    user:
      name: admin
      password: admin
  
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

logging:
  level:
    com.cryptotrader: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/crypto-trading-api.log

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus,httptrace,env,beans,conditions,configprops,heapdump,threaddump"
  endpoint:
    health:
      show-details: always

app:
  security:
    jwt:
      secret: mySecretKey
      expiration: 86400000 # 24 hours
    encryption:
      key: myEncryptionKey123456789012345678901234567890
  
  trading:
    limits:
      daily-volume: 10000.00
      monthly-volume: 100000.00
      max-order-size: 1000.00
    
    rate-limiting:
      requests-per-minute: 60
      trading-requests-per-minute: 10
  
  exchanges:
    sandbox-mode: true
    supported:
      - binance
      - coinbase
      - kraken

---
spring:
  profiles: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/cryptodb}
    username: ${DATABASE_USERNAME:crypto_user}
    password: ${DATABASE_PASSWORD:crypto_password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

logging:
  level:
    com.cryptotrader: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/crypto-trading-api.log

app:
  security:
    jwt:
      secret: ${JWT_SECRET:myProductionSecretKey}
      expiration: ${JWT_EXPIRATION:86400000}
    encryption:
      key: ${ENCRYPTION_KEY:myProductionEncryptionKey123456789012345678901234567890}
  
  exchanges:
    sandbox-mode: false
